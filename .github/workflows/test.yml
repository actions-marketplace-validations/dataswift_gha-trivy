name: Test my typescript action

on:
  pull_request:
    paths:
      - 'src/**'
      - 'dist/**'
      - tsconfig.json
      - package.json
      - yarn.lock

env:
  IMAGE_NAME: alpine:3.10.1

jobs:
  test1:
    name: Test for with parameter
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2.3.4

    - name: Install dependencies
      run: yarn install

    - name: Build
      run: yarn run build

    - name: Pull docker image
      run: docker pull alpine:3.10.3

    - uses: ./
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        image: alpine:3.10.1
        issue_label: trivy,vulnerability,test
        issue_title: Security Alert Test
        issue_assignee: homoluctus

    - uses: homoluctus/slatify@v1.9.0
      if: always()
      with:
        type: ${{ job.status }}
        job_name: ':ts: *test gitrivy (test1)*'
        channel: '#develop'
        url: ${{ secrets.SLACK_WEBHOOK }}

  test2:
    name: Test for getting image name from enviroment variable
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Pull docker image
        run: docker pull alpine:3.10.3

      - uses: ./
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue_label: trivy,vulnerability,test
          issue_title: Security Alert Test
          issue_assignee: homoluctus

      - uses: homoluctus/slatify@v1.9.0
        if: always()
        with:
          type: ${{ job.status }}
          job_name: ':ts: *test gitrivy (test2)*'
          channel: '#develop'
          url: ${{ secrets.SLACK_WEBHOOK }}

  test3:
    name: Test not to create issue
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Pull docker image
        run: docker pull alpine:3.10.3

      - uses: ./
        with:
          issue: 'false'

      - uses: homoluctus/slatify@v1.9.0
        if: always()
        with:
          type: ${{ job.status }}
          job_name: ':ts: *test gitrivy (test3)*'
          channel: '#develop'
          url: ${{ secrets.SLACK_WEBHOOK }}
